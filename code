import pandas as pd
import numpy as np

a=pd.read_csv('/content/healthcare-dataset-stroke-data.csv.xls')
a

a.columns

a.shape

a.info()

a.isnull().sum()

a.fillna(method='ffill',inplace=True)

a.isnull().sum()

from sklearn import preprocessing
label_encoder=preprocessing.LabelEncoder()
a['gender']=label_encoder.fit_transform(a['gender'])
a['gender'].unique()

label_encoder=preprocessing.LabelEncoder()
a['ever_married']=label_encoder.fit_transform(a['ever_married'])
a['ever_married'].unique()

label_encoder=preprocessing.LabelEncoder()
a['work_type']=label_encoder.fit_transform(a['work_type'])
a['work_type'].unique()

label_encoder=preprocessing.LabelEncoder()
a['Residence_type']=label_encoder.fit_transform(a['Residence_type'])
a['Residence_type'].unique()

label_encoder=preprocessing.LabelEncoder()
a['smoking_status']=label_encoder.fit_transform(a['smoking_status'])
a['smoking_status'].unique()

x=a[['id', 'gender', 'age', 'hypertension', 'heart_disease', 'ever_married',
       'work_type', 'Residence_type', 'avg_glucose_level', 'bmi',
       'smoking_status']]
x

y=a[['stroke']]
y

from sklearn.model_selection import train_test_split
xtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=0.2)

xtrain.shape

xtest.shape

ytrain.shape

ytest.shape

from sklearn.metrics import accuracy_score
from sklearn.tree import DecisionTreeClassifier
b=DecisionTreeClassifier()
b.fit(xtrain,ytrain)
ypred=b.predict(xtest)
score=accuracy_score(ytest,ypred)
print(score)

from sklearn.metrics import accuracy_score
from sklearn.naive_bayes import GaussianNB
b = GaussianNB()
b.fit(xtrain,ytrain)
ypred=b.predict(xtest)
score=accuracy_score(ytest,ypred)
print(score)

from sklearn.metrics import accuracy_score
from sklearn.ensemble import RandomForestClassifier
b = RandomForestClassifier(n_estimators=10)
b.fit(xtrain,ytrain)
ypred=b.predict(xtest)
score=accuracy_score(ytest,ypred)
print(score)

from sklearn.metrics import accuracy_score
from sklearn import svm
b = svm.SVC()
b.fit(xtrain,ytrain)
ypred=b.predict(xtest)
score=accuracy_score(ytest,ypred)
print(score)

from sklearn.metrics import accuracy_score
from sklearn.linear_model import SGDClassifier
clf = SGDClassifier(loss="hinge", penalty="l2", max_iter=5)
b.fit(xtrain,ytrain)
ypred=b.predict(xtest)
score=accuracy_score(ytest,ypred)
print(score)

prediction=b.predict([[9046,1,67.0,0,1,1,2,1,228.69,36.6,1]])
print(prediction)

prediction=b.predict([[44679,0,44.0,0,0,1,0,1,85.28,26.2,0]])
print(prediction)

prediction=b.predict([[60182,0,49.0,0,0,1,2,1,171.23,34.4,3]])
print(prediction)

from sklearn.metrics import confusion_matrix
c=confusion_matrix(ytest,ypred)
print(c)

from sklearn.metrics import classification_report
print(classification_report(ytest,ypred))
